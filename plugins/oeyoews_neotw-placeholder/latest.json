{"title":"$:/plugins/oeyoews/neotw-placeholder","description":"codemirror placeholder","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"neotw-placeholder","dependents":"","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-placeholder/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-placeholder/readme\",\"description\":\"neotw-placeholder\",\"text\":\"{{$:/languages/neotw-placeholder/readme}}\\n\"},\"$:/languages/neotw-placeholder/readme\":{\"title\":\"$:/languages/neotw-placeholder/readme\",\"text\":\"<div class=\\\"prose max-w-none prose-indigo\\\">\\n\\n* add placeholder for codemirror5\\n\\n</div>\"},\"$:/plugins/tiddlywiki/codemirror/mode/display/placeholder.js,\":{\"title\":\"$:/plugins/tiddlywiki/codemirror/mode/display/placeholder.js,\",\"text\":\"/*\\\\\\ntitle: $:/plugins/tiddlywiki/codemirror/mode/display/placeholder.js,\\ntype: application/javascript\\nmodule-type: codemirror\\n\\n\\\\*/\\n\\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\\n\\n(function (mod) {\\n  if (typeof exports == 'object' && typeof module == 'object')\\n    // CommonJS\\n    mod(require('../../lib/codemirror'));\\n  else if (typeof define == 'function' && define.amd)\\n    // AMD\\n    define(['../../lib/codemirror'], mod);\\n  // Plain browser env\\n  else mod(CodeMirror);\\n})(function (CodeMirror) {\\n  CodeMirror.defineOption('placeholder', '', function (cm, val, old) {\\n    var prev = old && old != CodeMirror.Init;\\n    if (val && !prev) {\\n      cm.on('blur', onBlur);\\n      cm.on('change', onChange);\\n      cm.on('swapDoc', onChange);\\n      CodeMirror.on(\\n        cm.getInputField(),\\n        'compositionupdate',\\n        (cm.state.placeholderCompose = function () {\\n          onComposition(cm);\\n        }),\\n      );\\n      onChange(cm);\\n    } else if (!val && prev) {\\n      cm.off('blur', onBlur);\\n      cm.off('change', onChange);\\n      cm.off('swapDoc', onChange);\\n      CodeMirror.off(\\n        cm.getInputField(),\\n        'compositionupdate',\\n        cm.state.placeholderCompose,\\n      );\\n      clearPlaceholder(cm);\\n      var wrapper = cm.getWrapperElement();\\n      wrapper.className = wrapper.className.replace(' CodeMirror-empty', '');\\n    }\\n\\n    if (val && !cm.hasFocus()) onBlur(cm);\\n  });\\n\\n  function clearPlaceholder(cm) {\\n    if (cm.state.placeholder) {\\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\\n      cm.state.placeholder = null;\\n    }\\n  }\\n  function setPlaceholder(cm) {\\n    clearPlaceholder(cm);\\n    var elt = (cm.state.placeholder = document.createElement('pre'));\\n    elt.style.cssText = 'height: 0; overflow: visible; color: #d4d4d4;';\\n    elt.style.direction = cm.getOption('direction');\\n    elt.className = 'CodeMirror-placeholder CodeMirror-line-like';\\n    var placeHolder = cm.getOption('placeholder');\\n    if (typeof placeHolder == 'string')\\n      placeHolder = document.createTextNode(placeHolder);\\n    elt.appendChild(placeHolder);\\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\\n  }\\n\\n  function onComposition(cm) {\\n    setTimeout(function () {\\n      var empty = false;\\n      if (cm.lineCount() == 1) {\\n        var input = cm.getInputField();\\n        empty =\\n          input.nodeName == 'TEXTAREA'\\n            ? !cm.getLine(0).length\\n            : !/[^\\\\u200b]/.test(\\n                input.querySelector('.CodeMirror-line').textContent,\\n              );\\n      }\\n      if (empty) setPlaceholder(cm);\\n      else clearPlaceholder(cm);\\n    }, 20);\\n  }\\n\\n  function onBlur(cm) {\\n    if (isEmpty(cm)) setPlaceholder(cm);\\n  }\\n  function onChange(cm) {\\n    var wrapper = cm.getWrapperElement(),\\n      empty = isEmpty(cm);\\n    wrapper.className =\\n      wrapper.className.replace(' CodeMirror-empty', '') +\\n      (empty ? ' CodeMirror-empty' : '');\\n\\n    if (empty) setPlaceholder(cm);\\n    else clearPlaceholder(cm);\\n  }\\n\\n  function isEmpty(cm) {\\n    return cm.lineCount() === 1 && cm.getLine(0) === '';\\n  }\\n});\",\"type\":\"application/javascript\",\"module-type\":\"codemirror\"}}}"}