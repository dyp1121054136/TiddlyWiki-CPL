{"title":"$:/plugins/OokTech/MomentaryPushButton","description":"A modification of the button widget that actions on mousedown and on release","author":"OokTech","version":"0.0.1","core-version":">=5.1.6","source":"https://github.com/OokTech/TW5-MomentaryPushButton","plugin-type":"plugin","dependents":"","type":"application/json","text":"{\n    \"tiddlers\": {\n        \"$:/plugins/OokTech/PushButton/PushButton.js\": {\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/OokTech/PushButton/PushButton.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nButton widget\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar MomentaryButtonWidget = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nMomentaryButtonWidget.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nMomentaryButtonWidget.prototype.render = function(parent,nextSibling) {\\n\\tvar self = this;\\n\\t// Remember parent\\n\\tthis.parentDomNode = parent;\\n\\t// Compute attributes and execute state\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n\\t// Create element\\n\\tvar tag = \\\"button\\\";\\n\\tif(this.buttonTag && $tw.config.htmlUnsafeElements.indexOf(this.buttonTag) === -1) {\\n\\t\\ttag = this.buttonTag;\\n\\t}\\n\\tvar domNode = this.document.createElement(tag);\\n\\t// Assign classes\\n\\tvar classes = this[\\\"class\\\"].split(\\\" \\\") || [],\\n\\t\\tisPoppedUp = this.popup && this.isPoppedUp();\\n\\tif(this.selectedClass) {\\n\\t\\tif(this.set && this.setTo && this.isSelected()) {\\n\\t\\t\\t$tw.utils.pushTop(classes,this.selectedClass.split(\\\" \\\"));\\n\\t\\t}\\n\\t\\tif(isPoppedUp) {\\n\\t\\t\\t$tw.utils.pushTop(classes,this.selectedClass.split(\\\" \\\"));\\n\\t\\t}\\n\\t}\\n\\tif(isPoppedUp) {\\n\\t\\t$tw.utils.pushTop(classes,\\\"tc-popup-handle\\\");\\n\\t}\\n\\tdomNode.className = classes.join(\\\" \\\");\\n\\t// Assign other attributes\\n\\tif(this.style) {\\n\\t\\tdomNode.setAttribute(\\\"style\\\",this.style);\\n\\t}\\n\\tif(this.tooltip) {\\n\\t\\tdomNode.setAttribute(\\\"title\\\",this.tooltip);\\n\\t}\\n\\tif(this[\\\"aria-label\\\"]) {\\n\\t\\tdomNode.setAttribute(\\\"aria-label\\\",this[\\\"aria-label\\\"]);\\n\\t}\\n\\t// Add a mousedown event handler\\n\\tdomNode.addEventListener(\\\"mousedown\\\",function (event) {\\n\\t\\tvar handled = false;\\n\\t\\tself.enabled = true;\\n\\t\\tif(self.actions) {\\n\\t\\t\\tself.invokeActionString(self.clickActions,self,event);\\n\\t\\t}\\n\\t\\tif(handled) {\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\t\\t}\\n\\t\\treturn handled;\\n\\t},false);\\n\\tdomNode.addEventListener(\\\"mouseup\\\",function (event) {\\n\\t\\tvar handled = false;\\n\\t\\tif(self.actions) {\\n\\t\\t\\tself.invokeActionString(self.releaseActions,self,event);\\n\\t\\t}\\n\\t\\tif(handled) {\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\t\\t}\\n\\t\\treturn handled;\\n\\t},false);\\n\\tdomNode.addEventListener(\\\"mouseleave\\\",function (event) {\\n\\t\\t//If the button is held down than do the release action when the mouse leaves but only act if the button is being heald down when the mouse leaves\\n\\t\\tif(self.enabled) {\\n\\t\\t\\tvar handled = false;\\n\\t\\t\\tif(self.actions) {\\n\\t\\t\\t\\tself.invokeActionString(self.releaseActions,self,event);\\n\\t\\t\\t}\\n\\t\\t\\tif(handled) {\\n\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t}\\n\\t\\t\\treturn handled;\\n\\t\\t}\\n\\t},false);\\n\\t// Insert element\\n\\tparent.insertBefore(domNode,nextSibling);\\n\\tthis.renderChildren(domNode,null);\\n\\tthis.domNodes.push(domNode);\\n};\\n\\n/*\\nWe don't allow actions to propagate because we trigger actions ourselves\\n*/\\nMomentaryButtonWidget.prototype.allowActionPropagation = function() {\\n\\treturn false;\\n};\\n\\nMomentaryButtonWidget.prototype.getBoundingClientRect = function() {\\n\\treturn this.domNodes[0].getBoundingClientRect();\\n};\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nMomentaryButtonWidget.prototype.execute = function() {\\n\\t// Get attributes\\n\\tthis.clickActions = this.getAttribute(\\\"clickActions\\\");\\n\\tthis.releaseActions = this.getAttribute(\\\"releaseActions\\\");\\n\\tthis[\\\"class\\\"] = this.getAttribute(\\\"class\\\",\\\"\\\");\\n\\tthis[\\\"aria-label\\\"] = this.getAttribute(\\\"aria-label\\\");\\n\\tthis.tooltip = this.getAttribute(\\\"tooltip\\\");\\n\\tthis.style = this.getAttribute(\\\"style\\\");\\n\\tthis.selectedClass = this.getAttribute(\\\"selectedClass\\\");\\n\\tthis.defaultSetValue = this.getAttribute(\\\"default\\\",\\\"\\\");\\n\\tthis.buttonTag = this.getAttribute(\\\"tag\\\");\\n\\t// Make child widgets\\n\\tthis.makeChildWidgets();\\n};\\n\\n/*\\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n*/\\nMomentaryButtonWidget.prototype.refresh = function(changedTiddlers) {\\n\\tvar changedAttributes = this.computeAttributes();\\n\\t//if(changedAttributes.to || changedAttributes.message || changedAttributes.param || changedAttributes.set || changedAttributes.setTo || changedAttributes.popup || changedAttributes.hover || changedAttributes[\\\"class\\\"] || changedAttributes.selectedClass || changedAttributes.style || (this.set && changedTiddlers[this.set]) || (this.popup && changedTiddlers[this.popup])) {\\n\\tif (Object.keys(changedAttributes).length) {\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t}\\n\\treturn this.refreshChildren(changedTiddlers);\\n};\\n\\nexports.mbutton = MomentaryButtonWidget;\\n\\n})();\\n\",\n            \"title\": \"$:/plugins/OokTech/PushButton/PushButton.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/plugins/OokTech/PushButton/Acknowledgements\": {\n            \"title\": \"$:/plugins/OokTech/PushButton/Acknowledgements\",\n            \"text\": \" This plugin was created and is maintained by [[OokTech|$:/plugins/OokTech/OokTechInfo]].\\n\\n\\n[[Tiddlywiki|http://TiddlyWiki.com]] was originally created by [[Jeremy Ruston|https://github.com/Jermolene/TiddlyWiki5]]. For general ~TiddlyWiki help see [[tiddlywiki.com|http://tiddlywiki.com]] or the [[google group|https://groups.google.com/forum/#!forum/tiddlywiki]].\\n\\nThank you to the general TiddlyWiki community for developing and maintaining the tiddlywiki core.\\n\"\n        },\n        \"$:/plugins/OokTech/PushButton/License\": {\n            \"title\": \"$:/plugins/OokTech/PushButton/License\",\n            \"text\": \"BSD 3-Clause License\\n\\nCopyright (c) 2017, OokTech LLC\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n* Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n* Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n* Neither the name of the copyright holder nor the names of its\\n  contributors may be used to endorse or promote products derived from\\n  this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\"\n        },\n        \"$:/plugins/OokTech/OokTechInfo\": {\n            \"title\": \"$:/plugins/OokTech/OokTechInfo\",\n            \"text\": \"~OokTech is a small engineering company based in the USA with an international presence. We work on open software and hardware projects.\\n\\nWebsite: http://Ooktech.com<br>\\n~GitHub: [[OokTech GitHub|https://github.com/OokTech]]\\n\"\n        },\n        \"$:/pluginlibrary/OokTech/OokTechPlugins\": {\n            \"title\": \"$:/pluginlibrary/OokTech/OokTechPlugins\",\n            \"tags\": \"$:/tags/PluginLibrary\",\n            \"url\": \"https://ooktech.com/TiddlyWiki/PluginLibrary\",\n            \"text\": \"The plugin library for plugins developed and maintained by OokTech. See http://OokTech.com/TiddlyWiki for more information.\\n\"\n        },\n        \"$:/plugins/OokTech/MomentaryPushButton/readme\": {\n            \"title\": \"$:/plugins/OokTech/MomentaryPushButton/readme\",\n            \"text\": \"This is a widget that makes a button that does actions both on mousedown and mouseup\\n\\nLicense: [[BSD 3 Clause|$:/plugins/OokTech/MomentaryPushButton/License]]\\n\\nCreator: [[OokTech|$:/plugins/OokTech/OokTechInfo]]\\n\\nSource: [[GitHub|https://https://github.com/OokTech/TW5-MomentaryPushButton]]\\n\"\n        }\n    }\n}","name":"MomentaryPushButton"}