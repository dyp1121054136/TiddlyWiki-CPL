{"title":"$:/plugins/OokTech/TiddlerBundles","description":"A tool to create and unpack bundles of tiddlers in TiddlyWiki","author":"OokTech","version":"0.1.1","core-version":">=5.1.6","source":"https://github.com/OokTech/TW5-TiddlerBundles","plugin-type":"plugin","dependents":"","type":"application/json","text":"{\n    \"tiddlers\": {\n        \"$:/plugins/OokTech/TiddlerBundles/Create Local Bundle\": {\n            \"caption\": \"Create Local Bundle\",\n            \"tags\": \"\",\n            \"title\": \"$:/plugins/OokTech/TiddlerBundles/Create Local Bundle\",\n            \"text\": \"\\\\define defaultName()\\n<$list\\n\\tfilter=\\\"[[$:/state/Export Bundle]!has[bundle_name]]\\\"\\n>\\n\\tTiddler Bundle\\n</$list>\\n\\\\end\\n\\n\\\\define defaultName\\\"(bundle_name:\\\"Tiddler Bundle\\\")\\n<$edit-text\\n\\ttiddler='$:/state/Export Bundle'\\n\\tfield='bundle_name'\\n\\tclass='bundleName'\\n\\tdefault=<<foo>>\\n/>\\n\\\\end\\n\\n!!!Bundle tiddlers\\n\\n\\n<table\\n\\tclass=\\\"no-border\\\"\\n\\tstyle=\\\"width:100%;\\\"\\n>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\t@@color:gray; 1. @@\\n\\t\\t</td>\\n\\t\\t<td\\n\\t\\t\\tstyle=\\\"width:60%;\\\"\\n\\t\\t>\\n\\t\\t\\t@@color:gray;Filter, drag'n-drop or type titles to add:@@\\n\\t\\t</td>\\n\\t\\t<td\\n\\t\\t\\tstyle=\\\"vertical-align:top;\\\"\\n\\t\\t>\\n\\t\\t\\t<center>\\n\\t\\t\\t\\t@@color:gray; To be bundled:@@\\n\\t\\t\\t</center>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<$edit-text\\n\\t\\t\\t\\ttiddler='$:/state/Export Bundle'\\n\\t\\t\\t\\tfield=\\\"filter\\\"\\n\\t\\t\\t\\ttag=\\\"textarea\\\"\\n\\t\\t\\t\\tclass=\\\"bundleFilter\\\"\\n\\t\\t\\t\\tplaceholder=\\\"Type in a filter here such as [tag[MyTag]] or type tiddler titles directly - or drag'n drop tiddler titles into here\\\"\\n\\t\\t\\t/>\\n\\t\\t</td>\\n\\t\\t<td\\n\\t\\t\\tstyle=\\\"vertical-align:top;\\\"\\n\\t\\t>\\n\\t\\t\\t<center>\\n\\t\\t\\t\\t<$list\\n\\t\\t\\t\\t\\tfilter={{$:/state/Export Bundle!!filter}}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<$link\\n\\t\\t\\t\\t\\t\\tto={{!!title}}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<$view\\n\\t\\t\\t\\t\\t\\t\\ttiddler={{!!title}}\\n\\t\\t\\t\\t\\t\\t\\tfield=\\\"title\\\"\\n\\t\\t\\t\\t\\t\\t\\tformat=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t{{!!title}}\\n\\t\\t\\t\\t\\t\\t</$view>\\n\\t\\t\\t\\t\\t</$link>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t</$list>\\n\\t\\t\\t</center>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td\\n\\t\\t\\tstyle=\\\"vertical-align:top;\\\"\\n\\t\\t>\\n\\t\\t\\t@@color:gray; 2. @@\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t@@color:gray;Optional Bundle name (default is //Tiddler Bundle//)@@\\n\\t\\t\\t<$set\\n\\t\\t\\t\\tname=\\\"defaultName\\\"\\n\\t\\t\\t\\tfilter=\\\"[[$:/state/Export Bundle]!has[bundle_name]]\\\"\\n\\t\\t\\t\\tvalue=\\\"Tiddler Bundle\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<$edit-text\\n\\t\\t\\t\\t\\ttiddler='$:/state/Export Bundle'\\n\\t\\t\\t\\t\\tfield='bundle_name'\\n\\t\\t\\t\\t\\tclass='bundleName'\\n\\t\\t\\t\\t\\tdefault=<<defaultName>>\\n\\t\\t\\t\\t\\tplaceholder=<<defaultName>>\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</$set>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td\\n\\t\\t\\tstyle=\\\"vertical-align:top;\\\"\\n\\t\\t>\\n\\t\\t\\t@@color:gray; 2. @@\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t@@color:gray;Optional Tiddler Separator String (default is //IDONTKNOWWHATTOMAKETHIS//)@@\\n\\t\\t\\t<$edit-text\\n\\t\\t\\t\\ttiddler='$:/settings/Export Bundle'\\n\\t\\t\\t\\tfield='tiddler_separator'\\n\\t\\t\\t\\tclass='bundleName'\\n\\t\\t\\t\\tplaceholder='You can safely ignore this if you wish.'\\n\\t\\t\\t/>\\n\\t\\t</td>\\n\\t</tr>\\n\\t<tr>\\n\\t\\t<td>\\n\\t\\t\\t@@color:gray; 3.@@\\n\\t\\t</td>\\n\\t\\t<td\\n\\t\\t\\tstyle=\\\"float:right;\\\"\\n\\t\\t>\\n\\t\\t\\t<$button>\\n\\t\\t\\t\\tCreate Bundle\\n\\t\\t\\t\\t<$action-tiddlerbundle\\n\\t\\t\\t\\t\\t$bundle={{$:/state/Export Bundle!!bundle_name}}\\n\\t\\t\\t\\t\\t$filter={{$:/state/Export Bundle!!filter}}\\n\\t\\t\\t\\t\\t$separator={{$:/settings/Export Bundle!!tiddler_separator}}\\n\\t\\t\\t\\t\\t$action=pack\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</$button>\\n\\t\\t</td>\\n\\t\\t<td>\\n\\t\\t\\t<$list\\n\\t\\t\\t\\tfilter=\\\"[{$:/state/Export Bundle!!bundle_name}has[list]]\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<center>\\n\\t\\t\\t\\t\\t<$link\\n\\t\\t\\t\\t\\t\\tto={{!!title}}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<$view\\n\\t\\t\\t\\t\\t\\t\\ttiddler={{!!title}}\\n\\t\\t\\t\\t\\t\\t\\tfield=\\\"title\\\"\\n\\t\\t\\t\\t\\t\\t\\tformat=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t{{!!title}}\\n\\t\\t\\t\\t\\t\\t</$view>\\n\\t\\t\\t\\t\\t</$link>\\n\\t\\t\\t\\t\\t<$button\\n\\t\\t\\t\\t\\t\\tclass='tc-btn-invisible'\\n\\t\\t\\t\\t\\t\\ttooltip='Delete Bundle'\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t{{$:/core/images/delete-button}}\\n\\t\\t\\t\\t\\t\\t<$action-sendmessage\\n\\t\\t\\t\\t\\t\\t\\t$message='tm-delete-tiddler'\\n\\t\\t\\t\\t\\t\\t\\t$param=<<currentTiddler>>\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t</center>\\n\\t\\t\\t</$list>\\n\\t\\t</td>\\n\\t</tr>\\n</table>\\n<br>\\n\\n<style>\\n.bundleFilter {display:block;\\n          width:100%;padding-left:5px; margin-bottom:10px;\\n          border:1px solid lightgray;\\n          resize:both; overflow-y:auto;\\n          min-height:150px;\\n}\\n.bundleFilter:hover {border:1px solid blue;}\\n.bundleName {display:block;\\n          width:100%;padding-left:5px; margin-bottom:10px;\\n          border:1px solid lightgray;\\n          resize:both; overflow-y:auto;\\n }\\n.no-border,\\n.no-border th,\\n.no-border tr,\\n.no-border td{\\nborder:0;\\n}\\n.img svg {fill: gray; height: 16px; width:16px; margin-top:-1.3em;float:right;}\\n</style>\\n\"\n        },\n        \"$:/plugins/OokTech/TiddlerBundles/Acknowledgements\": {\n            \"title\": \"$:/plugins/OokTech/TiddlerBundles/Acknowledgements\",\n            \"text\": \" This plugin was created and is maintained by [[OokTech|$:/plugins/OokTech/OokTechInfo]].\\n\\n\\n[[Tiddlywiki|http://TiddlyWiki.com]] was originally created by [[Jeremy Ruston|https://github.com/Jermolene/TiddlyWiki5]]. For general ~TiddlyWiki help see [[tiddlywiki.com|http://tiddlywiki.com]] or the [[google group|https://groups.google.com/forum/#!forum/tiddlywiki]].\\n\\nThank you to the general TiddlyWiki community for developing and maintaining the tiddlywiki core.\\n\\nAdditional contributions for this plugin came from:\\n\\n* <:-) (aka Mat) http://twaddle.tiddlyspot.com/\\n\"\n        },\n        \"$:/plugins/OokTech/TiddlerBundles/License\": {\n            \"title\": \"$:/plugins/OokTech/TiddlerBundles/License\",\n            \"text\": \"BSD 3-Clause License\\n\\nCopyright (c) 2017, OokTech LLC\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n* Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n* Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n* Neither the name of the copyright holder nor the names of its\\n  contributors may be used to endorse or promote products derived from\\n  this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\"\n        },\n        \"$:/plugins/OokTech/OokTechInfo\": {\n            \"title\": \"$:/plugins/OokTech/OokTechInfo\",\n            \"text\": \"~OokTech is a small engineering company based in the USA with an international presence. We work on open software and hardware projects.\\n\\nWebsite: http://Ooktech.com<br>\\n~GitHub: [[OokTech GitHub|https://github.com/OokTech]]\\n\"\n        },\n        \"$:/pluginlibrary/OokTech/OokTechPlugins\": {\n            \"title\": \"$:/pluginlibrary/OokTech/OokTechPlugins\",\n            \"tags\": \"$:/tags/PluginLibrary\",\n            \"url\": \"https://ooktech.com/TiddlyWiki/PluginLibrary\",\n            \"text\": \"The plugin library for plugins developed and maintained by OokTech. See http://OokTech.com/TiddlyWiki for more information.\\n\"\n        },\n        \"$:/plugins/OokTech/TiddlerBundles/Unbundle Tiddlers\": {\n            \"caption\": \"Unbundle Tiddlers\",\n            \"tags\": \"\",\n            \"title\": \"$:/plugins/OokTech/TiddlerBundles/Unbundle Tiddlers\",\n            \"text\": \"!!!Un-bundle tiddlers\\nSelect Bundle:\\n<$select\\n\\ttiddler='$:/state/Tiddler Bundles'\\n\\tfield='selected_import'\\n>\\n\\t<option\\n\\t\\tvalue=''\\n\\t>\\n\\t\\t--\\n\\t</option>\\n\\t<$list\\n\\t\\tfilter='[tag[Tiddler Bundle]]'\\n\\t>\\n\\t\\t<option>\\n\\t\\t\\t<$view\\n\\t\\t\\t\\tfield='title'\\n\\t\\t\\t/>\\n\\t\\t</option>\\n\\t</$list>\\n</$select>\\n\\n<$reveal\\n\\ttype='nomatch'\\n\\tstate='$:/state/Export Bundle!!show_import_tiddler_list'\\n\\ttext='show'\\n>\\n\\t<$button\\n\\t\\tset='$:/state/Export Bundle!!show_import_tiddler_list'\\n\\t\\tsetTo='show'\\n\\t>\\n\\t\\tShow Tiddler Import List\\n\\t</$button>\\n</$reveal>\\n\\n<$reveal\\n\\ttype='match'\\n\\tstate='$:/state/Export Bundle!!show_import_tiddler_list'\\n\\ttext='show'\\n>\\n\\t<$button\\n\\t\\tset='$:/state/Export Bundle!!show_import_tiddler_list'\\n\\t\\tsetTo='hide'\\n\\t>\\n\\t\\tHide Tiddler Import List\\n\\t</$button>\\n\\n\\t<$list\\n\\t\\tfilter='[list{$:/state/Tiddler Bundles!!selected_import}]'\\n\\t>\\n\\n\\t</$list>\\n</$reveal>\\n\\n<$checkbox\\n\\ttiddler='$:/state/Tiddler Bundles'\\n\\tfield='overwrite'\\n\\tchecked=true\\n\\tunchecked=false\\n>\\n\\tOverwrite Existing Tiddlers\\n</$checkbox>\\n\\n<$list\\n\\tfilter='[[$:/state/Tiddler Bundles]get[selected_import]]'\\n\\tvariable=dummy\\n\\temptyMessage=\\\"\\\"\\\"Select a bundle to import\\\"\\\"\\\"\\n>\\n\\t<$button>\\n\\t\\tImport\\n\\t\\t<$view\\n\\t\\t\\ttiddler='$:/state/Tiddler Bundles'\\n\\t\\t\\tfield='selected_import'\\n\\t\\t/>\\n\\t\\t<$list\\n\\t\\t\\tfilter='[{$:/state/Tiddler Bundles!!selected_import}get[separator]]'\\n\\t\\t\\tvariable='SEPARATOR'\\n\\t\\t>\\n\\t\\t\\t<$action-tiddlerbundle\\n\\t\\t\\t\\t$bundle={{$:/state/Tiddler Bundles!!selected_import}}\\n\\t\\t\\t\\t$overwrite={{$:/state/Tiddler Bundles!!overwrite}}\\n\\t\\t\\t\\t$action='unpack'\\n\\t\\t\\t\\t$separator=<<SEPARATOR>>\\n\\t\\t\\t/>\\n\\t\\t</$list>\\n\\t</$button>\\n</$list>\\n\\n<!--\\n<$reveal\\n\\ttype='nomatch'\\n\\tstate='$:/state/Tiddler Bundles!!selected_import'\\n\\ttext=''\\n>\\n\\t<$button>\\n\\t\\tImport\\n\\t\\t<$view\\n\\t\\t\\ttiddler='$:/state/Tiddler Bundles'\\n\\t\\t\\tfield='selected_import'\\n\\t\\t/>\\n\\t\\t<$list\\n\\t\\t\\tfilter='[{$:/state/Tiddler Bundles!!selected_import}get[separator]]'\\n\\t\\t\\tvariable='SEPARATOR'\\n\\t\\t>\\n\\t\\t\\t<$action-tiddlerbundle\\n\\t\\t\\t\\t$bundle={{$:/state/Tiddler Bundles!!selected_import}}\\n\\t\\t\\t\\t$overwrite={{$:/state/Tiddler Bundles!!overwrite}}\\n\\t\\t\\t\\t$action='unpack'\\n\\t\\t\\t\\t$separator=<<SEPARATOR>>\\n\\t\\t\\t/>\\n\\t\\t</$list>\\n\\t</$button>\\n</$reveal>\\n<$reveal\\n\\ttype='match'\\n\\tstate='$:/state/Tiddler Bundles!!selected_import'\\n\\ttext=''\\n>\\n\\tSelect a bundle to import\\n</$reveal>\\n-->\\n\\n<!--\\n<style>\\n.bundleFilter {display:block;\\n          width:100%;padding-left:5px; margin-bottom:10px;\\n          border:1px solid lightgray;\\n          resize:both; overflow-y:auto;\\n          min-height:150px;\\n}\\n.bundleFilter:hover {border:1px solid blue;}\\n.bundleName {display:block;\\n          width:100%;padding-left:5px; margin-bottom:10px;\\n          border:1px solid lightgray;\\n          resize:both; overflow-y:auto;\\n }\\n.no-border,\\n.no-border th,\\n.no-border tr,\\n.no-border td{\\nborder:0;\\n}\\n.img svg {fill: gray; height: 16px; width:16px; margin-top:-1.3em;float:right;}\\n</style>\\n-->\\n\"\n        },\n        \"$:/plugins/OokTech/TiddlerBundles/action-tiddlerbundle.js\": {\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/OokTech/TiddlerBundles/action-tiddlerbundle.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nAction widget that packages multiple tiddlers together into an easily managed bundle for moving between wikis or storage.\\n\\n$filter and $unpackFilter should be combined since the widget will always either unpack of pack something, never both.\\n\\nUsage:\\n\\n<$action-tiddlerbundle $bundle=BundleName $filter= $overwrite= $separator= $action= $unpackFilter= $type=/>\\n\\n|!Parameter |!Description |\\n|$bundle |The name of the bundle, either for bundle creation or to select which bundle to unpack. (No default)|\\n|$filter |The filter used to select which tiddlers are put into the bundle (No default)|\\n|$overwrite |Set this to `true` to overwrite existing tiddlers from the bundle, set to `false` to leave existing tiddlers unaffected. (Default: `false`)|\\n|$separator |The separator string used between tiddlers in the bundle |\\n|$action |Pack (create bundle) or unpack (unpack tiddlers) (Default: `Pack`)|\\n|$unpackFilter |A filter used to select which tiddlers to unpack from a bundle (Default: `[all[]]`)|\\n|$type |`Tiddler` or `JSON` (Default: `Tiddler`) |\\n\\n\\\\*/\\n\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar ActionTiddlerBundle = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nActionTiddlerBundle.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nActionTiddlerBundle.prototype.render = function(parent,nextSibling) {\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n};\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nActionTiddlerBundle.prototype.execute = function() {\\n\\tthis.actionBundle = this.getAttribute(\\\"$bundle\\\");\\n\\tthis.bundleFilter = this.getAttribute(\\\"$filter\\\");\\n\\tthis.actionOverwrite = this.getAttribute(\\\"$overwrite\\\", false);\\n\\tthis.actionSeparator = this.getAttribute(\\\"$separator\\\");\\n\\tthis.actionAction = this.getAttribute(\\\"$action\\\");\\n\\tthis.unpackFilter = this.getAttribute(\\\"$unpackFilter\\\");\\n\\tthis.bundleType = this.getAttribute(\\\"$type\\\");\\n};\\n\\n/*\\nRefresh the widget by ensuring our attributes are up to date\\n*/\\nActionTiddlerBundle.prototype.refresh = function(changedTiddlers) {\\n\\tvar changedAttributes = this.computeAttributes();\\n\\tif(changedAttributes[\\\"$bundle\\\"] || changedAttributes[\\\"$filter\\\"] || changedAttributes[\\\"$overwrite\\\"] || changedAttributes['$separator'] || changedAttributes['$action']) {\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t}\\n\\treturn this.refreshChildren(changedTiddlers);\\n};\\n\\n/*\\nInvoke the action associated with this widget\\n*/\\nActionTiddlerBundle.prototype.invokeAction = function(triggeringWidget,event) {\\n\\tvar separator;\\n\\tif (this.actionSeparator) {\\n\\t\\tseparator = this.actionSeparator;\\n\\t} else {\\n\\t\\tseparator = 'thisisthetiddlerdivisionstringwhywouldyouevenhavethisinyourtiddlerseriouslywhythisisjustridiculuous';\\n\\t}\\n\\n\\tif (this.actionAction === 'pack') {\\n\\t\\tvar bundleType = this.bundleType ? this.bundleType:'Tiddler';\\n\\t\\t//It looks like this is some code left over from when I made this use url parameters as input\\n\\t\\tvar urlBundleDefinition = $tw.utils.getLocationHash();\\n\\t\\tvar action = urlBundleDefinition.split(':',1);\\n\\t\\tif (action[0] === '#bundle') {\\n\\t\\t\\tvar bundleFilter = urlBundleDefinition.slice(urlBundleDefinition.indexOf(':')+1);\\n\\t\\t\\tvar bundleTiddlers = this.wiki.filterTiddlers(bundleFilter);\\n\\t\\t\\tfor (var i = 0; i < bundleTiddlers.length; i++) {\\n\\t\\t\\t\\tbundleTiddlers[i] = decodeURI(bundleTiddlers[i]);\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvar bundleFilter = this.bundleFilter;\\n\\t\\t\\tvar bundleTiddlers = this.wiki.filterTiddlers(bundleFilter);\\n\\t\\t}\\n\\t\\tvar bundleText = '';\\n\\t\\tvar bundleObject = {};\\n\\t\\tfor (var i = 0; i < bundleTiddlers.length; i++) {\\n\\t\\t\\tif (this.bundleType === \\\"JSON\\\") {\\n\\t\\t\\t\\tvar currentBundleTiddler = this.wiki.getTiddler(decodeURI(bundleTiddlers[i]));\\n\\t\\t\\t\\tbundleObject[bundleTiddlers[i]] = currentBundleTiddler;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tvar currentBundleTiddler = this.wiki.getTiddler(decodeURI(bundleTiddlers[i]));\\n\\t\\t\\t\\tbundleText += 'title:' + currentBundleTiddler.fields.title + '\\\\n';\\n\\t\\t\\t\\tbundleText += 'tags:' + $tw.utils.stringifyList(currentBundleTiddler.fields.tags) + '\\\\n';\\n\\t\\t\\t\\tvar fieldTitle;\\n\\t\\t\\t\\tfor (fieldTitle in currentBundleTiddler.fields) {\\n\\t\\t\\t\\t\\tif (fieldTitle !== 'title' && fieldTitle !== 'text' && fieldTitle !== 'tags') {\\n\\t\\t\\t\\t\\t\\tbundleText += fieldTitle + ':' + currentBundleTiddler.fields[fieldTitle] + '\\\\n';\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbundleText += 'text:' + currentBundleTiddler.fields['text'] + '\\\\n' + separator;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (this.bundleType === \\\"JSON\\\") {\\n\\t\\t\\tbundleText = JSON.stringify(bundleObject);\\n\\t\\t}\\n\\t\\t$tw.wiki.setText(this.actionBundle, 'list', undefined, $tw.utils.stringifyList(bundleTiddlers));\\n\\t\\t$tw.wiki.setText(this.actionBundle, 'tags', undefined, '[[Tiddler Bundle]]');\\n\\t\\t$tw.wiki.setText(this.actionBundle, 'text', undefined, bundleText);\\n\\t\\t$tw.wiki.setText(this.actionBundle, 'separator', undefined, separator);\\n\\t\\t$tw.wiki.setText(this.actionBundle, 'bundle_type', undefined, bundleType);\\n\\t}\\n\\n\\n\\tif (this.actionAction === 'unpack') {\\n\\t\\tvar filterOutput = this.unpackFilter ? true:false;\\n\\t\\tif (filterOutput) {\\n\\t\\t\\tvar unpackList = this.wiki.filterTiddlers(this.unpackFilter);\\n\\t\\t}\\n\\t\\tvar tiddler = $tw.wiki.getTiddler(this.actionBundle);\\n\\t\\tif (tiddler) {\\n\\t\\t\\t//Get the raw text for the bundle.\\n\\t\\t\\tvar bundleText = tiddler.getFieldString('text');\\n\\t\\t\\tif (tiddler.fields.bundle_type === 'JSON') {\\n\\t\\t\\t\\tvar bundleObject = JSON.parse(tiddler.fields.text);\\n\\t\\t\\t\\tfor (var tiddlerName in bundleObject) {\\n\\t\\t\\t\\t\\tif (filterOutput === false || (unpackList.indexOf(tiddlerName) !== -1)) {\\n\\t\\t\\t\\t\\t\\tif (this.actionOverwrite || !this.wiki.getTiddler(tiddlerName)) {\\n\\t\\t\\t\\t\\t\\t\\tthis.wiki.addTiddler(bundleObject[tiddlerName].fields);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t//Get the raw text for each tiddler.\\n\\t\\t\\t\\tvar rawBundleTiddlers = bundleText.split(separator);\\n\\t\\t\\t\\t//Create a tiddler from each tiddler. Only overwrite existing tiddlers if this.actionOverwrite is true\\n\\t\\t\\t\\tfor (var i = 0; i < rawBundleTiddlers.length; i++) {\\n\\t\\t\\t\\t\\tif (rawBundleTiddlers[i].trim() !== '') {\\n\\t\\t\\t\\t\\t\\t//Get the raw fields text.\\n\\t\\t\\t\\t\\t\\tvar rawOtherFields = rawBundleTiddlers[i].split('text:',1);\\n\\t\\t\\t\\t\\t\\tvar otherFields = rawOtherFields[0].split('\\\\n');\\n\\t\\t\\t\\t\\t\\tvar textField = rawBundleTiddlers[i].replace(otherFields.join('\\\\n') + 'text:','');\\n\\t\\t\\t\\t\\t\\tvar fields = {};\\n\\t\\t\\t\\t\\t\\tfor (var j = 0; j < otherFields.length; j++) {\\n\\t\\t\\t\\t\\t\\t\\tvar currentField = otherFields[j].slice(otherFields[j].indexOf(':')+1);\\n\\t\\t\\t\\t\\t\\t\\tvar currentFieldName = otherFields[j].split(':',1);\\n\\t\\t\\t\\t\\t\\t\\tif (currentFieldName[0].trim() !== '') {\\n\\t\\t\\t\\t\\t\\t\\t\\tfields[currentFieldName[0]] = currentField;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tfields['text'] = textField;\\n\\t\\t\\t\\t\\t\\tif (filterOutput === false || (unpackList.indexOf(fields.title) !== -1)) {\\n\\t\\t\\t\\t\\t\\t\\tif (this.actionOverwrite || !this.wiki.getTiddler(fields.title)) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.wiki.addTiddler(fields);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn true; // Action was invoked\\n};\\n\\nexports[\\\"action-tiddlerbundle\\\"] = ActionTiddlerBundle;\\n\\n})();\\n\",\n            \"title\": \"$:/plugins/OokTech/TiddlerBundles/action-tiddlerbundle.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/plugins/OokTech/TiddlerBundles/readme\": {\n            \"title\": \"$:/plugins/OokTech/TiddlerBundles/readme\",\n            \"text\": \"Action widget that packages multiple tiddlers together into an easily managed bundle for moving between wikis or storage.\\n\\nUsage:\\n\\n`<$action-tiddlerbundle $bundle=BundleName $filter=\\\"[!is[system]limit[10]]\\\" $overwrite=false $action=Pack $type=Tiddler/>`\\n\\n|!Parameter |!Description |\\n|$bundle |The name of the bundle, either for bundle creation or to select which bundle to unpack. (No default)|\\n|$filter |The filter used to select which tiddlers are put into the bundle (No default)|\\n|$overwrite |Set this to `true` to overwrite existing tiddlers from the bundle, set to `false` to leave existing tiddlers unaffected. (Default: `false`)|\\n|$separator |The separator string used between tiddlers in the bundle |\\n|$action |Pack (create bundle) or unpack (unpack tiddlers) (Default: `Pack`)|\\n|$unpackFilter |A filter used to select which tiddlers to unpack from a bundle (Default: `[all[]]`)|\\n|$type |`Tiddler` or `JSON` (Default: `Tiddler`) |\\n\\nLicense: [[BSD 3 Clause|$:/plugins/OokTech/CategoryLists/License]]\\n\\nCreator: [[OokTech|$:/plugins/OokTech/OokTechInfo]]\\n\\nSource: [[GitHub|https://https://github.com/OokTech/TW5-CategoryLists]]\\n\"\n        }\n    }\n}","name":"TiddlerBundles"}