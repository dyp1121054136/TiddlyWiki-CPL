{"title":"$:/plugins/oeyoews/tiddlywiki-keyboard-hint","description":"Tiddlywiki Keyboard Hint","author":"oeyoews","version":"0.0.1","core-version":">=5.2.5","type":"application/json","plugin-type":"plugin","name":"Tiddlywiki Keyboard Hint","list":"readme","dependents":"","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/readme\":{\"title\":\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/readme\",\"text\":\"!! Tiddlywiki Keyboard Hint\\n\\n* if your computer installed some vim extensions, such as surfing-keys or vimium, this plugin maybe not work\\nsites, this plugin will be not work normally\\n\"},\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/icon\":{\"title\":\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/icon\",\"text\":\"<svg stroke=\\\"currentColor\\\" fill=\\\"#aaaaaa\\\" stroke-width=\\\"0\\\" version=\\\"1\\\" viewBox=\\\"0 0 48 48\\\" enable-background=\\\"new 0 0 48 48\\\" height=\\\"1em\\\" width=\\\"1em\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"#8BC34A\\\" d=\\\"M39,15c0-2.2-1.8-4-4-4h-6c-0.7,0-1.1-0.8-0.7-1.4c0.6-1,0.9-2.2,0.6-3.5c-0.4-2-1.9-3.6-3.8-4 C21.8,1.4,19,3.9,19,7c0,1,0.3,1.8,0.7,2.6c0.4,0.6,0,1.4-0.8,1.4h-6c-2.2,0-4,1.8-4,4v7c0,0.7,0.8,1.1,1.4,0.7 c1-0.6,2.2-0.9,3.5-0.6c2,0.4,3.6,1.9,4,3.8c0.7,3.2-1.8,6.1-4.9,6.1c-1,0-1.8-0.3-2.6-0.7C9.8,30.9,9,31.3,9,32v6c0,2.2,1.8,4,4,4 h22c2.2,0,4-1.8,4-4V15z\\\"></path></svg>\\n\",\"type\":\"image/svg+xml\"},\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/keyboard.js\":{\"title\":\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/keyboard.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/tiddlywiki-keyboard-hint/keyboard.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\n\\nif (!$tw.browser) return;\\nconst KEY_CONTAINER_CLASS = 'key-container';\\nconst MAX_KEYS_DEFAULT = 4; // 最大键位数\\nconst DISAPPEAR_DELAY_DEFAULT = 500; // 消失延迟时间（以毫秒为单位）\\n\\nlet keyContainer;\\nlet keysEl;\\n\\nfunction createKeyContainer() {\\n  keyContainer = document.createElement('div');\\n  keyContainer.className = KEY_CONTAINER_CLASS;\\n  keysEl = document.createElement('div');\\n  keysEl.className = 'keys';\\n  keyContainer.appendChild(keysEl);\\n  document.body.appendChild(keyContainer);\\n}\\n\\nfunction addClass(el, className) {\\n  if (el.classList) {\\n    el.classList.add(className);\\n  } else {\\n    el.className += ' ' + className;\\n  }\\n}\\n\\nfunction removeClass(el, className) {\\n  if (el.classList) {\\n    el.classList.remove(className);\\n  } else {\\n    el.className = el.className.replace(\\n      new RegExp('(^|\\\\\\\\b)' + className.split(' ').join('|') + '(\\\\\\\\b|$)', 'gi'),\\n      ' ',\\n    );\\n  }\\n}\\n\\nfunction updateKey(\\n  maxKeys = MAX_KEYS_DEFAULT,\\n  disappearDelay = DISAPPEAR_DELAY_DEFAULT,\\n) {\\n  let pressedKeys = [];\\n  let timer;\\n  let inInput = false;\\n\\n  document.addEventListener('input', () => {\\n    inInput = true;\\n  });\\n  document.addEventListener('focusout', () => {\\n    inInput = false;\\n  });\\n  function keyupHandler(event) {\\n    const key = event.key;\\n    if (!inInput && pressedKeys.length < maxKeys) {\\n      pressedKeys.push(key);\\n      // pressedKeys.unshift(key);\\n      if (!keyContainer) {\\n        createKeyContainer();\\n      }\\n      updateKeys();\\n      // console.log('Mousetrap key pressed!');\\n    }\\n  }\\n\\n  /* 在更新按键时，先使用 while 循环将 keysEl 的所有子元素都移除，然后使用 createElement() 方法创建按键元素，并使用 appendChild() 方法将其添加到 keysEl 中。这样就可以避免使用 innerHTML 属性而带来的安全问题。\\n需要注意的是，innerHTML 属性具有更高的性能，因为它可以一次性将多个 DOM 元素添加到页面中。因此，在元素数量较多的情况下，使用 innerHTML 属性可能会更快。但是，在元素数量较少的情况下，使用 createElement() 和 appendChild() 方法的性能差异可以忽略不计。另外，使用 createElement() 和 appendChild() 方法可以更好地控制页面中的 DOM 结构，从而避免潜在的安全问题。 */\\n  function updateKeys() {\\n    while (keysEl.firstChild) {\\n      keysEl.removeChild(keysEl.firstChild);\\n    }\\n    pressedKeys.forEach((key) => {\\n      const keyEl = document.createElement('span');\\n      keyEl.classList.add('key');\\n      const keyName = key === ' ' ? 'Space' : key;\\n      keyEl.textContent = keyName;\\n      keysEl.appendChild(keyEl);\\n    });\\n    if (pressedKeys.length > 0) {\\n      addClass(keyContainer, 'visible');\\n    }\\n    clearTimeout(timer);\\n    timer = setTimeout(() => {\\n      removeClass(keyContainer, 'visible');\\n      pressedKeys = [];\\n    }, disappearDelay);\\n  }\\n\\n  document.addEventListener('keydown', keyupHandler);\\n\\n  return {\\n    stop: () => document.removeEventListener('keyup', keyupHandler),\\n  };\\n}\\n\\nmodule.exports = {\\n  updateKey,\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/startup.js\":{\"title\":\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/startup.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/tiddlywiki-keyboard-hint/startup.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nshow pressed key\\n\\\\*/\\n\\n(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict';\\n\\n  exports.name = 'keyContainer';\\n  exports.platforms = ['browser'];\\n  exports.after = ['startup'];\\n  exports.synchronous = true;\\n  const { updateKey } = require('./keyboard.js');\\n\\n  exports.startup = updateKey;\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/style\":{\"title\":\"$:/plugins/oeyoews/tiddlywiki-keyboard-hint/style\",\"text\":\".key-container {\\n  position: fixed;\\n  bottom: 4px;\\n  left: 50%;\\n  transform: translateX(-50%) translateY(100%);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 8px;\\n  background-color: #1e1e1e;\\n  color: white;\\n  font-size: 14px;\\n  font-weight: bold;\\n  border-radius: 4px;\\n  opacity: 0;\\n  transition:\\n    transform 0.3s ease-in-out,\\n    opacity 0.3s ease-in-out;\\n}\\n\\n.key-container.visible {\\n  opacity: 1;\\n  transform: translateX(-50%) translateY(0);\\n}\\n\\n.keys {\\n  display: flex;\\n  gap: 3px;\\n}\\n\\n/* key */\\n.key {\\n  display: inline-block;\\n  padding: 4px 8px;\\n  background-color: #2d2d2d;\\n  /* background-color: rgba(0, 0, 0, 0.5); */\\n  color: white;\\n  font-size: 12px;\\n  font-weight: bold;\\n  line-height: 1;\\n  border-radius: 2px;\\n}\\n\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/css\"}}}"}