{"title":"$:/plugins/OokTech/GetData","description":"A simple action widget that lets you request data using an XMLhttprequest","author":"OokTech","version":"0.0.2","core-version":">=5.1.6","source":"https://github.com/OokTech/TW5-GetData","plugin-type":"plugin","dependents":"","type":"application/json","text":"{\n    \"tiddlers\": {\n        \"$:/plugins/OokTech/GetData/Acknowledgements\": {\n            \"title\": \"$:/plugins/OokTech/GetData/Acknowledgements\",\n            \"text\": \" This plugin was created and is maintained by [[OokTech|$:/plugins/OokTech/OokTechInfo]].\\n\\n\\n[[Tiddlywiki|http://TiddlyWiki.com]] was originally created by [[Jeremy Ruston|https://github.com/Jermolene/TiddlyWiki5]]. For general ~TiddlyWiki help see [[tiddlywiki.com|http://tiddlywiki.com]] or the [[google group|https://groups.google.com/forum/#!forum/tiddlywiki]].\\n\\nThank you to the general TiddlyWiki community for developing and maintaining the tiddlywiki core.\\n\"\n        },\n        \"$:/plugins/OokTech/GetData/License\": {\n            \"title\": \"$:/plugins/OokTech/GetData/License\",\n            \"text\": \"BSD 3-Clause License\\n\\nCopyright (c) 2017, OokTech LLC\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n* Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n* Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n* Neither the name of the copyright holder nor the names of its\\n  contributors may be used to endorse or promote products derived from\\n  this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\"\n        },\n        \"$:/plugins/OokTech/OokTechInfo\": {\n            \"title\": \"$:/plugins/OokTech/OokTechInfo\",\n            \"text\": \"~OokTech is a small engineering company based in the USA with an international presence. We work on open software and hardware projects.\\n\\nWebsite: http://Ooktech.com<br>\\n~GitHub: [[OokTech GitHub|https://github.com/OokTech]]\\n\"\n        },\n        \"$:/pluginlibrary/OokTech/OokTechPlugins\": {\n            \"title\": \"$:/pluginlibrary/OokTech/OokTechPlugins\",\n            \"tags\": \"$:/tags/PluginLibrary\",\n            \"url\": \"https://ooktech.com/TiddlyWiki/PluginLibrary\",\n            \"text\": \"The plugin library for plugins developed and maintained by OokTech. See http://OokTech.com/TiddlyWiki for more information.\\n\"\n        },\n        \"$:/plugins/Federation/TWederation/action-requestdata.js\": {\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/Federation/TWederation/action-requestdata.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nAction widget to send an XMLhttprequest asking for data.\\n\\npublic/full?alt=json\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar RequestData = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nRequestData.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nRequestData.prototype.render = function(parent,nextSibling) {\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n};\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nRequestData.prototype.execute = function() {\\n\\tthis.sheetURL = this.getAttribute(\\\"$url\\\");\\n\\tthis.formTiddler = this.getAttribute(\\\"$tiddler\\\");\\n};\\n\\n/*\\nRefresh the widget by ensuring our attributes are up to date\\n*/\\nRequestData.prototype.refresh = function(changedTiddlers) {\\n\\tvar changedAttributes = this.computeAttributes();\\n\\tif(changedAttributes[\\\"$tiddler\\\"] || changedAttributes[\\\"$url\\\"]) {\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t}\\n\\treturn this.refreshChildren(changedTiddlers);\\n};\\n\\n/*\\nInvoke the action associated with this widget\\n*/\\nRequestData.prototype.invokeAction = function(triggeringWidget,event) {\\n\\n\\t//So what we do is we make a generic widget like this and have a set of worker functions in other tiddlers then when we call this widget we pick which worker we want and give in the needed inputs.\\n\\t//This way we can have a worker type for fetching plugins, worker types for fetchign different bundles in twederation things and so on.\\n\\t//We could even make it more generic and let the widget spawn other types of workers. Like use this to make timers and things for the wiki.\\n\\n\\n\\t//this is a cheap way to make the worker\\n\\t//I could load this from another file, that may be a better option.\\n\\tvar workerFunction = \\\"onmessage = function(e) {var url = e.data.url;var formRequest = new XMLHttpRequest();formRequest.onreadystatechange = function() {if (formRequest.readyState == XMLHttpRequest.DONE) {self.postMessage(formRequest.responseText);self.close();}};\\tformRequest.open('GET', url);formRequest.send( null );}\\\";\\n\\tvar workerBlob = new Blob([workerFunction],{type: \\\"text/javascript\\\"});\\n\\n\\tvar myWorker = new Worker(URL.createObjectURL(workerBlob));\\n\\tvar message = {\\n\\t\\turl: this.sheetURL\\n\\t};\\n\\tmyWorker.onmessage = this.displayResult;\\n\\tmyWorker.postMessage(message);\\n\\n\\treturn true; // Action was invoked\\n};\\n\\nRequestData.prototype.displayResult = function(event) {\\n\\t//Put whatever things you have to handle the returned data here.\\n\\t//console.log(event);\\n\\t//console.log(JSON.parse(event.data));\\n\\tvar responseData = JSON.parse(event.data);\\n\\tvar row;\\n\\tvar username;\\n\\tvar wikiname;\\n\\tvar wikiurl;\\n\\tfor (row in responseData.feed.entry) {\\n\\t\\tusername = responseData.feed.entry[row]['gsx$username']['$t']\\n\\t\\twikiname = responseData.feed.entry[row]['gsx$wikiname']['$t']\\n\\t\\twikiurl = responseData.feed.entry[row]['gsx$wikiurl']['$t']\\n\\t\\tvar creationFields = $tw.wiki.getCreationFields();\\n\\t\\tvar tiddlerFields = {'title':'New Card - ' + wikiname + ' - ' + wikiurl, 'text':'', 'author':username, 'name':wikiname, 'wiki_url':wikiurl, 'role':'Wiki twCard Listing'};\\n\\t\\tif(!$tw.wiki.getTiddler('$:/twCard/' + wikiname + ' - ' + wikiurl)) {\\n\\t\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler(creationFields, tiddlerFields));\\n\\t\\t}\\n\\t}\\n}\\n\\nexports[\\\"action-requestdata\\\"] = RequestData;\\n\\n})();\\n\",\n            \"title\": \"$:/plugins/Federation/TWederation/action-requestdata.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/plugins/OokTech/GetData/readme\": {\n            \"title\": \"$:/plugins/OokTech/GetData/readme\",\n            \"text\": \"This is a widget that can use an xmlhttprequest GET to request data\\n\\nLicense: [[BSD 3 Clause|$:/plugins/OokTech/GetData/License]]\\n\\nCreator: [[OokTech|$:/plugins/OokTech/OokTechInfo]]\\n\\nSource: [[GitHub|https://https://github.com/OokTech/TW5-GetData]]\\n\"\n        }\n    }\n}","name":"GetData"}