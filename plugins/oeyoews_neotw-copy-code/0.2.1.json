{"title":"$:/plugins/oeyoews/neotw-copy-code","description":"Neotw Copy Code","author":"oeyoews","version":"0.2.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"Neotw Copy Code","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus $:/plugins/oeyoews/neotw-icons","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-copy-code/Layout\":{\"title\":\"$:/plugins/oeyoews/neotw-copy-code/Layout\",\"tags\":\"$:/tags/Layout\",\"name\":\"{{$:/plugins/oeyoews/neotw-copy-code/icon}} Neotw Copy Code\",\"description\":\"{{$:/plugins/oeyoews/neotw-copy-code/readme!!description}}\",\"text\":\"\\\\import [[$:/core/ui/PageMacros]] [all[shadows+tiddlers]tag[$:/tags/Macro]!has[draft.of]]\\n\\n<$vars\\n  tv-config-toolbar-icons={{$:/config/Toolbar/Icons}}\\n  tv-config-toolbar-text={{$:/config/Toolbar/Text}}\\n  tv-config-toolbar-class={{$:/config/Toolbar/ButtonClass}}\\n  tv-enable-drag-and-drop={{$:/config/DragAndDrop/Enable}}\\n  tv-show-missing-links={{$:/config/MissingLinks}}\\n  storyviewTitle={{$:/view}}\\n  languageTitle={{{ [{$:/language}get[name]] }}}>\\n\\n<div class=\\\"prose max-w-none prose-indigo m-auto sm:w-auto md:w-2/3\\\">\\n{{{ [[$:/plugins/oeyoews/neotw-copy-code/readme]] ||$:/core/ui/ViewTemplate }}}\\n</div>\"},\"$:/plugins/oeyoews/neotw-copy-code/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-copy-code/readme\",\"description\":\"~Copy Code\",\"text\":\"<div class=\\\"prose max-w-none prose-indigo\\\">\\n\\n!! Neotw Copy Code\\n\\n> 图标支持的 highlgiht 识别的全部语言\\n\\n> This plugin can greatly improve the efficiency and convenience of displaying and sharing code in TiddlyWiki, especially when you need to copy code frequently.\\n\\n> 这个插件可以极大地提高在 TiddlyWiki 中显示和分享代码的效率和便利性，尤其是在需要频繁复制代码时。\\n\\n!! TODO\\n\\n* support filename, such as `main.js`\\n\\n!! Examples\\n\\n```bash\\r\\n#!/bin/bash\\r\\necho \\\"Hello, TiddlyWiki!\\\"\\r\\n```\\n\\n```c\\r\\n#include <stdio.h>\\n\\nint main() {\\r\\n    printf(\\\"Hello, TiddlyWiki!\\\\n\\\");\\r\\n    return 0;\\r\\n}\\r\\n```\\n\\n```cpp\\r\\n#include <iostream>\\n\\nint main() {\\r\\n    std::cout << \\\"Hello, TiddlyWiki!\\\" << std::endl;\\r\\n    return 0;\\r\\n}\\r\\n```\\n\\n```csharp\\r\\nusing System;\\n\\nclass Program {\\r\\n    static void Main(string[] args) {\\r\\n        Console.WriteLine(\\\"Hello, TiddlyWiki!\\\");\\r\\n    }\\r\\n}\\r\\n```\\n\\n```css\\r\\n/* index.css */\\r\\nbody::before {\\r\\n    content: \\\"Hello, TiddlyWiki!\\\";\\r\\n}\\r\\n```\\n\\n```go\\r\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\r\\n    fmt.Println(\\\"Hello, TiddlyWiki!\\\")\\r\\n}\\r\\n```\\n\\n```html\\r\\n<!DOCTYPE html5>\\r\\n<html>\\r\\n<head>\\r\\n    <title>Hello, TiddlyWiki!</title>\\r\\n</head>\\r\\n<body>\\r\\nHello\\r\\n</body>\\r\\n</html>\\r\\n```\\n\\n```java\\r\\npublic class HelloWorld {\\r\\n    public static void main(String[] args) {\\r\\n        System.out.println(\\\"Hello, TiddlyWiki!\\\");\\r\\n    }\\r\\n}\\r\\n```\\n\\n```javascript\\r\\nconsole.log(\\\"Hello, TiddlyWiki!\\\");\\r\\n```\\n\\n```json\\r\\n{\\r\\n  \\\"message\\\": \\\"Hello, TiddlyWiki!\\\"\\r\\n}\\r\\n```\\n\\n```kotlin\\r\\nfun main() {\\r\\n    println(\\\"Hello, TiddlyWiki!\\\")\\r\\n}\\r\\n```\\n\\n```less\\r\\n@message: \\\"Hello, TiddlyWiki!\\\";\\r\\nbody::before {\\r\\n    content: @message;\\r\\n}\\r\\n```\\n\\n```lua\\r\\nprint(\\\"Hello, TiddlyWiki!\\\")\\r\\n```\\n\\n```makefile\\r\\nhello:\\r\\n    @echo \\\"Hello, TiddlyWiki!\\\"\\r\\n```\\n\\n```markdown\\r\\n# Hello, TiddlyWiki!\\r\\n```\\n\\n```objective-c\\r\\n#import <Foundation/Foundation.h>\\n\\nint main(int argc, const char * argv[]) {\\r\\n    @autoreleasepool {\\r\\n        NSLog(@\\\"Hello, TiddlyWiki!\\\");\\r\\n    }\\r\\n    return 0;\\r\\n}\\r\\n```\\n\\n```perl\\r\\nprint \\\"Hello, TiddlyWiki!\\\\n\\\";\\r\\n```\\n\\n```php\\r\\n<?php\\r\\necho \\\"Hello, TiddlyWiki!\\\";\\r\\n?>\\r\\n```\\n\\n```\\r\\nHello, TiddlyWiki!\\r\\n```\\n\\n```python\\r\\nprint(\\\"Hello, TiddlyWiki!\\\")\\r\\n```\\n\\n```r\\r\\ncat(\\\"Hello, TiddlyWiki!\\\\n\\\")\\r\\n```\\n\\n```ruby\\r\\nputs \\\"Hello, TiddlyWiki!\\\"\\r\\n```\\n\\n```rust\\r\\nfn main() {\\r\\n    println!(\\\"Hello, TiddlyWiki!\\\");\\r\\n}\\r\\n```\\n\\n```scss\\r\\n$greeting: \\\"Hello, TiddlyWiki!\\\";\\n\\nbody::before {\\r\\n    content: $greeting;\\r\\n}\\r\\n```\\n\\n```sql\\r\\nSELECT 'Hello, TiddlyWiki!';\\r\\n```\\n\\n```\\r\\n$ echo \\\"Hello, TiddlyWiki!\\\"\\r\\n```\\n\\n```swift\\r\\nimport Swift\\n\\nprint(\\\"Hello, TiddlyWiki!\\\")\\r\\n```\\n\\n```toml\\r\\nmessage = \\\"Hello, TiddlyWiki!\\\"\\r\\n```\\n\\n```typescript\\r\\nconsole.log(\\\"Hello, TiddlyWiki!\\\");\\r\\n```\\n\\n```vb\\r\\nModule HelloWorld\\r\\n    Sub Main()\\r\\n        Console.WriteLine(\\\"Hello, TiddlyWiki!\\\")\\r\\n    End Sub\\r\\nEnd Module\\r\\n```\\n\\n```xml\\r\\n<root>\\r\\n    <message>Hello, TiddlyWiki!</message>\\r\\n</root>\\r\\n```\\n\\n```yaml\\r\\nmessage: Hello, TiddlyWiki!\\r\\n```\\n\\n```apache\\r\\n# httpd.conf\\r\\nServerName localhost\\n\\n<VirtualHost *:80>\\r\\n    DocumentRoot \\\"/path/to/www\\\"\\r\\n    ServerName example.com\\r\\n</VirtualHost>\\r\\n```\\n\\n```dockerfile\\r\\nFROM nginx:latest\\n\\nCOPY index.html /usr/share/nginx/html/index.html\\r\\n```\\n\\n```fortran\\r\\nprogram HelloWorld\\r\\n    print *, \\\"Hello, TiddlyWiki!\\\"\\r\\nend program HelloWorld\\r\\n```\\n\\n```latex\\r\\n\\\\documentclass{article}\\n\\n\\\\begin{document}\\r\\nHello, TiddlyWiki!\\r\\n\\\\end{document}\\r\\n```\\n\\n```nginx\\r\\nserver {\\r\\n    listen 80;\\r\\n    server_name example.com;\\n\\n    location / {\\r\\n        root /var/www/html;\\r\\n        index index.html;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\"},\"$:/plugins/oeyoews/neotw-copy-code/atom.css\":{\"title\":\"$:/plugins/oeyoews/neotw-copy-code/atom.css\",\"text\":\"/*\\n\\nAtom One Dark by Daniel Gamage\\nOriginal One Dark Syntax theme from https://github.com/atom/one-dark-syntax\\n\\nbase:    #282c34\\nmono-1:  #abb2bf\\nmono-2:  #818896\\nmono-3:  #5c6370\\nhue-1:   #56b6c2\\nhue-2:   #61aeee\\nhue-3:   #c678dd\\nhue-4:   #98c379\\nhue-5:   #e06c75\\nhue-5-2: #be5046\\nhue-6:   #d19a66\\nhue-6-2: #e6c07b\\n\\n*/\\n\\n.hljs {\\n  color: #abb2bf;\\n  background: #282c34;\\n}\\n\\n.hljs-comment,\\n.hljs-quote {\\n  color: #5c6370;\\n  font-style: italic;\\n}\\n\\n.hljs-doctag,\\n.hljs-keyword,\\n.hljs-formula {\\n  color: #c678dd;\\n}\\n\\n.hljs-section,\\n.hljs-name,\\n.hljs-selector-tag,\\n.hljs-deletion,\\n.hljs-subst {\\n  color: #e06c75;\\n}\\n\\n.hljs-literal {\\n  color: #56b6c2;\\n}\\n\\n.hljs-string,\\n.hljs-regexp,\\n.hljs-addition,\\n.hljs-attribute,\\n.hljs-meta .hljs-string {\\n  color: #98c379;\\n}\\n\\n.hljs-attr,\\n.hljs-variable,\\n.hljs-template-variable,\\n.hljs-type,\\n.hljs-selector-class,\\n.hljs-selector-attr,\\n.hljs-selector-pseudo,\\n.hljs-number {\\n  color: #d19a66;\\n}\\n\\n.hljs-symbol,\\n.hljs-bullet,\\n.hljs-link,\\n.hljs-meta,\\n.hljs-selector-id,\\n.hljs-title {\\n  color: #61aeee;\\n}\\n\\n.hljs-built_in,\\n.hljs-title.class_,\\n.hljs-class .hljs-title {\\n  color: #e6c07b;\\n}\\n\\n.hljs-emphasis {\\n  font-style: italic;\\n}\\n\\n.hljs-strong {\\n  font-weight: bold;\\n}\\n\\n.hljs-link {\\n  text-decoration: underline;\\n}\\n\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/css\"},\"$:/core/modules/widgets/codeblock.js\":{\"title\":\"$:/core/modules/widgets/codeblock.js\",\"text\":\"/*\\\\\\r\\ntitle: $:/core/modules/widgets/codeblock.js\\r\\ntype: application/javascript\\r\\nmodule-type: widget\\r\\n\\r\\nCode block node widget\\r\\n\\r\\n\\\\*/\\r\\n(function () {\\r\\n  /*jslint node: true, browser: true */\\r\\n  /*global $tw: false */\\r\\n  'use strict';\\r\\n\\r\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget;\\r\\n\\r\\n  class CodeBlockWidget extends Widget {\\r\\n    constructor(parseTreeNode, options) {\\r\\n      super(parseTreeNode, options);\\r\\n    }\\r\\n\\r\\n    render(parent, nextSibling) {\\r\\n      // 不要加这句话, 构建library的时候需要使用到这个widget(server)\\r\\n      // if (!$tw.browser) return;\\r\\n\\r\\n      this.parentDomNode = parent;\\r\\n      this.computeAttributes();\\r\\n      this.execute();\\r\\n\\r\\n      const domNode = this.document.createElement('pre');\\r\\n      const codeNode = this.document.createElement('code');\\r\\n      const code = this.getAttribute('code', '');\\r\\n      let fileType = this.language;\\r\\n      // 排除一些文件类型, 不要修改默认输出, 比如会影响text/css, 导致样式失效\\r\\n      if (\\r\\n        fileType?.startsWith('text/') ||\\r\\n        fileType?.startsWith('image/') ||\\r\\n        fileType?.startsWith('application/')\\r\\n      ) {\\r\\n        fileType = '';\\r\\n      }\\r\\n      const classNames =\\r\\n        'absolute scale-0 group-hover:scale-100 overflow-auto fixed top-0 right-0 bg-transparent group-hover:bg-gray-200 group-hover:dark:bg-gray-700 transition-all duration-600 ease-in-out p-1 flex flex-row rounded backdrop-blur p-1';\\r\\n\\r\\n      const copyButton = this.document.createElement('button');\\r\\n      copyButton.style.textTransform = 'lowercase';\\r\\n\\r\\n      codeNode.appendChild(this.document.createTextNode(code));\\r\\n\\r\\n      domNode.appendChild(codeNode);\\r\\n\\r\\n      parent.insertBefore(domNode, nextSibling);\\r\\n      this.domNodes.push(domNode);\\r\\n\\r\\n      if (this.postRender) {\\r\\n        this.postRender();\\r\\n      }\\r\\n\\r\\n      // patch: must be called after postrender\\r\\n      domNode.className = 'relative group p-1';\\r\\n      codeNode.textContent && domNode.appendChild(copyButton);\\r\\n      copyButton?.classList?.add(...classNames.split(' '));\\r\\n      // https://tiddlywiki.com/#View%20Template%20Body%20Cascade:%5B%5BView%20Template%20Body%20Cascade%5D%5D%20%24%3A%2Fcore%2Fui%2FViewTemplate%2Fbody%2Fplugin\\r\\n      // https://talk.tiddlywiki.org/t/how-highlight-js-works-on-codeblock/8083/11\\r\\n      /* 你可以这样写成 main.js, 但是目前highlgith.js 不识别文件类型\\r\\n      bug: text/vnd.tiddlywiki 不能正常渲染main.js, markdown工作正常\\r\\n      bug: but this editor cannot recognize correct code type, need modify relate rules\\r\\n      patch:\\r\\n      or pop\\r\\n      var tokens = language.split('.');\\r\\n      language = tokens[tokens.length - 1]; */\\r\\n      copyButton.textContent = fileType;\\r\\n\\r\\n      // icon\\r\\n      const fileIcon = this.document.createElement('iconify-icon');\\r\\n      let standardIconLanguage =\\r\\n        codeNode.className.match(/language-(\\\\w+)/)?.[1] || '';\\r\\n      // simple-icons some special language mapping\\r\\n      const languageMapping = {\\r\\n        bash: 'gnubash',\\r\\n        css: 'css3',\\r\\n        cpp: 'cplusplus',\\r\\n        java: 'openjdk',\\r\\n        ini: 'toml',\\r\\n        dockerfile: 'docker',\\r\\n        scss: 'sass',\\r\\n        makefile: 'cmake',\\r\\n        sql: 'mysql',\\r\\n        html: 'html5', // html language-xml bug\\r\\n        vbnet: 'visualbasic',\\r\\n        xml: 'html5',\\r\\n        '': 'tiddlywiki',\\r\\n      };\\r\\n      if (standardIconLanguage in languageMapping) {\\r\\n        standardIconLanguage = languageMapping[standardIconLanguage];\\r\\n      }\\r\\n\\r\\n      fileIcon.setAttribute('icon', `simple-icons:${standardIconLanguage}`);\\r\\n      fileIcon.className = 'mx-1';\\r\\n      copyButton.appendChild(fileIcon);\\r\\n\\r\\n      /* const { href } = window.location;\\r\\n      if (href.includes('0.0.0.0')) {\\r\\n        copyButton?.classList?.add('cursor-not-allowed');\\r\\n        copyButton.disabled = true;\\r\\n        copyButton.title = `${href} 剪切板不可用`;\\r\\n      } */\\r\\n\\r\\n      let clipboardTimer;\\r\\n      copyButton.addEventListener('click', () => {\\r\\n        clearTimeout(clipboardTimer);\\r\\n        // clipboard api 不会向用户发出询问, 在不安全的上下文中(0.0.0.0), clipboard api 不会被允许\\r\\n        const copyToClipboard = $tw.utils.copyToClipboard;\\r\\n        copyToClipboard(codeNode.textContent, {\\r\\n          doNotNotify: true,\\r\\n        });\\r\\n        copyButton.textContent = 'copied';\\r\\n        clipboardTimer = setTimeout(() => {\\r\\n          copyButton.textContent = fileType;\\r\\n          copyButton.appendChild(fileIcon);\\r\\n        }, 1000);\\r\\n        /* navigator?.clipboard?.writeText(codeNode.textContent).then(() => {\\r\\n          copyButton.textContent = 'copied';\\r\\n          clipboardTimer = setTimeout(() => {\\r\\n            copyButton.textContent = fileType;\\r\\n            copyButton.appendChild(fileIcon);\\r\\n          }, 1000);\\r\\n        }); */\\r\\n      });\\r\\n    }\\r\\n\\r\\n    execute() {\\r\\n      // 不能为undefined, 否则 使用obj 的一些方法会报错(@highlightjs)\\r\\n      this.language = this.getAttribute('language', '');\\r\\n    }\\r\\n\\r\\n    refresh(changedTiddlers) {\\r\\n      const changedAttributes = this.computeAttributes();\\r\\n      if (changedAttributes.code || changedAttributes.language) {\\r\\n        this.refreshSelf();\\r\\n        return true;\\r\\n      } else {\\r\\n        return false;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  exports.codeblock = CodeBlockWidget;\\r\\n})();\\r\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/oeyoews/neotw-copy-code/icon\":{\"title\":\"$:/plugins/oeyoews/neotw-copy-code/icon\",\"type\":\"image/svg+xml\",\"text\":\"<svg stroke=\\\"currentColor\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" viewBox=\\\"0 0 24 24\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" height=\\\"1em\\\" width=\\\"1em\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"></path><path d=\\\"M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z\\\"></path><path d=\\\"M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2\\\"></path></svg>\\n\"}}}"}