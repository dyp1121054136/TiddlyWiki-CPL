[
    {
        "created": "20240325124440536",
        "creator": "林一二",
        "text": "",
        "title": "Plugin_202403254440536",
        "cpl.author": "LinOnetwo",
        "cpl.name": "Activity Log Tools",
        "cpl.plugin-type": "plugin",
        "cpl.title": "$:/plugins/linonetwo/activity-log-tools",
        "modified": "20240325125017199",
        "tags": "$:/tags/PluginWiki",
        "type": "text/vnd.tiddlywiki",
        "modifier": "林一二",
        "cpl.description": "Filter and library to read and write to daily activity save log tiddlers, for gamification frameworks, visualization frameworks, etc.",
        "cpl.uri": "https://github.com/tiddly-gittly/tw-gamification/releases/latest/download/__plugins_linonetwo_activity-log-tools.json",
        "cpl.readme": "This is a low-level JS library for developing plugins that will generate activity logs.\n\nThe following is a description of the development tools provided with this plug-in.\n\n!! Creating Log Files\n\n!!! JS Library\n\n!!!! createActivityLog\n\nCreates a log file, if it already exists it will be overwritten depending on the options.\n\n```ts\nfunction createActivityLog(logTiddlerType: LogFileTypes, fields: Partial<ITiddlerFields> & Pick<ITiddlerFields, 'title'>, options?: {\n    overwrite?: boolean;\n}): void\n```\n\nUsage\n\n```ts\nimport { createActivityLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/createActivityLog';\ncreateActivityLog(activityLog.type, { title: activityLog.title });\n```\n\n!!!! addActivityToLog\n\nAdds an activity log to the log file, if it doesn't exist it will be created for you.\n\n```ts\nfunction addActivityToLog(activityLog: IActivityLogFile | undefined, newActivityTimestamp: number): void\n```\n\nUsage\n\n```ts\nimport { addActivityToLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/addActivityToLog';\naddActivityToLog(eventLog, event.timestamp)\n```\n\n!! Read the log file\n\n!!! JS Library\n\n!!!! getActivityLog\n\nGets a log file based on the provided header, see the `IActivityLogFile` type, and the contents of the log will be stored in an ES6 `Map`, depending on the specific type of the file. The second parameter provided is not actually used, but just added directly to the returned object. If the tiddler doesn't exist, an empty `Map` is returned, which you can use as usual to add new stuff to, and then create the corresponding tiddler when storing it.\n\n```ts\nfunction getActivityLog(logTiddlerTitle: string, logTiddlerType: LogFileTypes): IActivityLogFile | undefined\n```\n\nUsage\n\n```ts\nimport { getActivityLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/getActivityLog';\nconst activityLog = getActivityLog(title, logTiddlerType);\n```\n\n!!! Filters\n\nYou can use filters to get summaries of logs for visualization and other scenarios.\n\n!!!! activitydaycounts\n\nCalculates the number of activities per day for a given time frame. (The following example uses the `weekstart` and `weekend` macros from the [[visualization dashboard plugin|https://tw-cpl.netlify.app/#Plugin_202403161108223]])\n\n```scss\n[[logFileTitle]activitydaycounts<weekstart>,<weekend>[]]\n```\n",
        "cpl.source": "https://github.com/tiddly-gittly/tw-gamification/tree/master/src/activity-log-tools",
        "cpl.documentation": "https://tiddly-gittly.github.io/tw-gamification/#%24%3A%2Fplugins%2Flinonetwo%2Factivity-log-tools",
        "cpl.core-version": ">=5.3.0",
        "cpl.tags": "framework"
    }
]